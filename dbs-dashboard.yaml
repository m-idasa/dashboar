openapi: 3.0.1
info:
  title: Test API
  version: v1
paths:
  /api/admin:
    get:
      tags:
        - Admin
      responses:
        "200":
          description: OK
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
            text/xml:
              schema:
                type: string
  /api/admin/total:
    post:
      tags:
        - Admin
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RequestDto"
          text/json:
            schema:
              $ref: "#/components/schemas/RequestDto"
          application/*+json:
            schema:
              $ref: "#/components/schemas/RequestDto"
          application/xml:
            schema:
              $ref: "#/components/schemas/RequestDto"
          text/xml:
            schema:
              $ref: "#/components/schemas/RequestDto"
          application/*+xml:
            schema:
              $ref: "#/components/schemas/RequestDto"
      responses:
        "200":
          description: OK
  /api/admin/totalperhour:
    get:
      tags:
        - Admin
      responses:
        "200":
          description: OK
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CircleResultDto"
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CircleResultDto"
            text/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CircleResultDto"
            application/xml:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CircleResultDto"
            text/xml:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CircleResultDto"
  /api/admin/circle:
    post:
      tags:
        - Admin
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RequestDto"
          text/json:
            schema:
              $ref: "#/components/schemas/RequestDto"
          application/*+json:
            schema:
              $ref: "#/components/schemas/RequestDto"
          application/xml:
            schema:
              $ref: "#/components/schemas/RequestDto"
          text/xml:
            schema:
              $ref: "#/components/schemas/RequestDto"
          application/*+xml:
            schema:
              $ref: "#/components/schemas/RequestDto"
      responses:
        "200":
          description: OK
  /api/admin/line:
    post:
      tags:
        - Admin
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RequestDto"
          text/json:
            schema:
              $ref: "#/components/schemas/RequestDto"
          application/*+json:
            schema:
              $ref: "#/components/schemas/RequestDto"
          application/xml:
            schema:
              $ref: "#/components/schemas/RequestDto"
          text/xml:
            schema:
              $ref: "#/components/schemas/RequestDto"
          application/*+xml:
            schema:
              $ref: "#/components/schemas/RequestDto"
      responses:
        "200":
          description: OK
  /api/admin/clients:
    get:
      tags:
        - Admin
      responses:
        "200":
          description: OK
  /api/admin/services:
    get:
      tags:
        - Admin
      responses:
        "200":
          description: OK
  /api/admin/dailylogin:
    get:
      tags:
        - Admin
      responses:
        "200":
          description: OK
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/CircleResponseDto"
            application/json:
              schema:
                $ref: "#/components/schemas/CircleResponseDto"
            text/json:
              schema:
                $ref: "#/components/schemas/CircleResponseDto"
            application/xml:
              schema:
                $ref: "#/components/schemas/CircleResponseDto"
            text/xml:
              schema:
                $ref: "#/components/schemas/CircleResponseDto"
  /api/admin/logedinusers:
    get:
      tags:
        - Admin
      parameters:
        - name: period
          in: query
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
  /api/admin/notlogedinusers:
    get:
      tags:
        - Admin
      parameters:
        - name: period
          in: query
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
  /api/admin/sendmessage:
    get:
      tags:
        - Admin
      responses:
        "200":
          description: OK
components:
  schemas:
    CircleResponseDto:
      type: object
      properties:
        service:
          type: string
          nullable: true
        client:
          type: string
          nullable: true
        data:
          type: array
          items:
            $ref: "#/components/schemas/CircleResultDto"
          nullable: true
      additionalProperties: false
    CircleResultDto:
      type: object
      properties:
        label:
          type: string
          nullable: true
        value:
          type: number
          format: double
      additionalProperties: false
    RequestDto:
      required:
        - clients
        - services
      type: object
      properties:
        from:
          type: string
          nullable: true
        to:
          type: string
          nullable: true
        services:
          type: array
          items:
            type: string
          nullable: true
        clients:
          type: array
          items:
            type: string
          nullable: true
        timePeriod:
          type: integer
          format: int32
          nullable: true
      additionalProperties: false
security:
  - Bearer: []
